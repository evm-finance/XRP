options:
  size: 2x

definitions:
  services:
    docker:
      memory: 4096


pipelines:
  custom:
    deploy-staging:
#      - step:
#          image: python:3.9-alpine
#          name: Build Image
#          services:
#            - docker
#          caches:
#            - pip
#            - docker
#          script:
#            - pip3 install awscli
#            - pip3 install awscli
#            - eval $(aws ecr get-login --no-include-email --region "${AWS_REGION}" | sed 's;https://;;g')
#            - docker build -t  $IMAGE_NAME --build-arg BASE_GRAPHQL_SERVER_URL=$STAGINIG_BASE_GRAPHQL_SERVER_URL --build-arg AMCHARTS_LICENSE=$AMCHARTS_LICENSE .
#            - docker push $IMAGE_NAME

      - step:
          image: atlassian/default-image:2
          name: Deploy to Staging
          deployment: staging
          caches:
            - pip
            - docker
          script:
            # Replace the docker image name in the task definition with the newly pushed image.
            - export BASE_GRAPHQL_SERVER_URL=$STAGINIG_BASE_GRAPHQL_SERVER_URL
            - export BASE_URL=$STAGING_BASE_URL
            - export CONTAINER_NAME="uvmx-ui"
            - export MEMORY="1024"
            - export CPU="512"
            - envsubst < task-definition-template.json >  task-definition.json

            # Update the task definition.
            - pipe: atlassian/aws-ecs-deploy:1.0.0
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_REGION
                CLUSTER_NAME: 'EVMX-Staging'
                SERVICE_NAME: 'evmx-ui'
                TASK_DEFINITION: 'task-definition.json'
                FORCE_NEW_DEPLOYMENT: "True"
