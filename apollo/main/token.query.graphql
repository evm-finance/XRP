# XRP Token Queries Only

query XRPTokenPrice($currency: String!, $issuer: String) {
  xrpTokenPrice(currency: $currency, issuer: $issuer) {
    currency
    issuer
    price
    priceChange24h
    volume24h
    marketcap
    lastUpdated
  }
}

query XRPTokenBalances($address: String!) {
  xrpTokenBalances(address: $address) {
    currency
    issuer
    balance
    price
    value
    lastUpdated
  }
}

query XRPScreener {
  xrpScreener {
    currency
    issuerAddress
    icon
    tokenName
    issuerName
    marketcap
    price
    volume24H
  }
}

# XRP Block Queries
query BlocksXrpGQL($network: String!) {
  blocks(network: $network) {
    network
    blockNumber
    minedAt
    txCount
    XRPLedger {
      ledgerHash
      eventsCount
    }
  }
}

query BlockGQL($network: String!, $blockNumber: Int!) {
  block(network: $network, blockNumber: $blockNumber) {
    network
    blockNumber
    minedAt
    txCount
    XRPLedger {
      ledgerHash
      eventsCount
      ledger {
        ledgerHash
        parentHash
        transactionHash
        closeTimeHuman
        totalCoins
        totalCoins1
      }
    }
    XRPTransactions {
      items {
        hash
        account
        destination
        transactionType
        amount
        fee
        metadata
      }
    }
  }
}

# Test Query
query TestGraphQL {
  __schema {
    types {
      name
    }
  }
}

query TokenQueryGQL($qcKey: String!, $walletAddress: String!, $interval: TimeInterval!, $contractAddress: String!, $chainId:Int! , $decimals: Int!){
  token(qcKey: $qcKey, walletAddress: $walletAddress , interval: $interval, contractAddress: $contractAddress, chainId: $chainId, decimals: $decimals){
    ID
    walletAddress
    interval
    qcKey

    aaveSymbol
    isAaveToken
    isQCToken

    coinGeckoID
    symbolName
    rank
    chainId
    contractAddress
    decimals

    tokenInterval {
      high
      low
      interval
      unixTime
    }
    price {
      qcKey
      symbolName
      priceUsd
      priceEth
    }

    price24h

    marketcap
    volume24h
    circulatingSupply
    support1h
    resistance1h
    safeScore

    websiteUrl
    bitbucketRepos
    githubRepos
    explorerUrls

    telegramChannelId
    twitterUrl
    subredditUrl
    facebookUrl

    coinDescription

    news{
      id
      title
      url
      publishedAt
      currencies {
        code
        title
        slug
        url
      }}

    balances{chainId, items{balance}}
  }
}

query DailyChartGQL($coinGeckoID:String!){
  dailyChart(coinGeckoID: $coinGeckoID){
    date
    priceUsd
  }
}
query ScreenerGQL($network: String!, $dex:String!, $sortBy: String!, $sort:String!,  $pageNumber:Int!){
  poolScreener(network: $network, dex: $dex, sortBy:$sortBy, sort:$sort,  pageNumber: $pageNumber){
    network
    dex
    address

    token0Symbol
    token0Address
    token0Name
    token0Decimals

    token1Symbol
    token1Name

    token0PriceUSD
    token1PriceUSD
    quoteExactIn
    reserveRatio

    change5Min
    change1h
    change24h
  }
}

subscription TimeGQL{
  currentTime {
    timeStamp, unixTime
  }
}

subscription PriceStreamGQL($network:String!, $dex:String!, $address: [String!]!){
  priceStream(network:$network,dex: $dex, address:$address){
    network
    dex
    pairAddress
    token0PriceUSD
    token1PriceUSD
    quoteExactIn
    reserveRatio
  }
}

subscription BlocksStreamGQL($network:String!){
  block(network:$network){
    network
    blockNumber
    minedAt
    txCount
    swapCount
    pairCreatedCount
    mintCount
    metrics{
      items
      {
        totalLiquidity
        change1H
        token0Symbol
        token1Symbol
      }
    }
    XRPLedger {
      ledgerHash
      eventsCount
    }
  }
}
